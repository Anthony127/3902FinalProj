Author of the code review
	Anthony Cavallero
Date of the code review
	10/8
Sprint number
	Sprint 3
Name of the .cs file being reviewed
	CollisionHandler.cs
Author of the .cs file being reviewed
	Jacob Starrett
Specific comments on code quality

The overall quality of this file is pretty high, despite relying on switch cases to determine how to handle a collision. The handler uses loops to compare
Mario with game objects stored in Arrays. The handler is decoupled from the Collision Dectector with the use of firstEntity and secondEntity, this will allow
for different objects to be passed into the handler, and lets the handler decide what should happen with the given entities and their collision type. However,
it may be worth while to investigate into simplifing the collision logic to remove the switch cases and as much of the conditional logic as possible. This would
lower complexity through this portion of the code base and increses the readibility of the code.

Hypothetical Changes

For instance, lets add a new collision type, Enemy and Enemy collisions, following the current state of the Collision Handler code, this could be easily added.
We would first start be defining an EnemyAndEnemyCollision type. Then we check if the collision detected was of the EnemyAndEnemyCollision type, with a simillar
conditional structure, and if it was cast both first and secondEntity to the IEnemy type. 
Then we would define a 4 part switch case for UP, DOWN, LEFT, and RIGHT collision cases, then add appropriate code for each section. I.E.
Collision from UP would stomp secondEntity, Collision from LEFT would cahnge both enemy directions and so on. And that is all there is to it.

Time Taken: 25 minutes.